---

---

<div
  class="flex justify-center card bg-base-100 shadow-xl sidebtn"
  id="btn-theme"
>
  <label class="" id="themeLabel1">
    <!-- this hidden checkbox controls the state -->
    <input type="checkbox" id="themeToggle1" />
    <!-- sun icon -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="swap-on icon icon-tabler icon-tabler-brightness-up"
      width="44"
      height="44"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="#009988"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"></path>
      <path d="M12 5l0 -2"></path>
      <path d="M17 7l1.4 -1.4"></path>
      <path d="M19 12l2 0"></path>
      <path d="M17 17l1.4 1.4"></path>
      <path d="M12 19l0 2"></path>
      <path d="M7 17l-1.4 1.4"></path>
      <path d="M6 12l-2 0"></path>
      <path d="M7 7l-1.4 -1.4"></path>
    </svg>
    <!-- moon icon -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="swap-off icon icon-tabler icon-tabler-moon-stars"
      width="44"
      height="44"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="#009988"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path
        d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
      ></path>
      <path
        d="M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"
      ></path>
      <path d="M19 11h2m-1 -1v2"></path>
    </svg>
  </label>
</div>


<script>
  document.addEventListener("astro:page-load", () => {
    const setTheme = (theme) => {
      document.documentElement.setAttribute("data-theme", theme);
      localStorage.setItem("theme", theme);
    };

    // cambio de tema
    const storedTheme = localStorage.getItem("theme");
    if (storedTheme) {
      setTheme(storedTheme);
    } else {
      // Si no existe un tema almacenado localmente, establece el tema oscuro por defecto
      setTheme("dracula");
    }

    const themeLabel1 = document.getElementById("themeLabel1");
    const themeToggle1 = document.getElementById("themeToggle1");
    const themeLabel2 = document.getElementById("themeLabel2");
    const themeToggle2 = document.getElementById("themeToggle2");

    // 同步按钮状态的函数
    const syncThemeToggle = () => {
      const currentTheme = localStorage.getItem("theme");
      const isChecked = currentTheme === "dracula";
      themeToggle1.checked = isChecked;
      themeToggle2.checked = isChecked;
    };

    // 初始同步按钮状态
    syncThemeToggle();

    themeLabel1.classList.add("swap");
    themeLabel1.classList.add("swap-rotate");
    themeLabel2.classList.add("swap");
    themeLabel2.classList.add("swap-rotate");

    // 按钮点击事件处理函数
    const handleToggleClick = () => {
      const currentTheme = localStorage.getItem("theme");
      const newTheme = currentTheme === "winter" ? "dracula" : "winter";
      setTheme(newTheme);
      syncThemeToggle();
    };

    themeToggle1.addEventListener("click", handleToggleClick);
    themeToggle2.addEventListener("click", handleToggleClick);
  });
</script>
